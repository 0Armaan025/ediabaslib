<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ContextMissing" xml:space="preserve">
    <value>Kontext nicht gefunden.</value>
  </data>
  <data name="CreateBackupPathFailed" xml:space="preserve">
    <value>Erzeugen des Backupverzeichnisses fehlgeschlagen.</value>
  </data>
  <data name="DetectInstalledEcusFailed" xml:space="preserve">
    <value>Erkennen der installierten ECUs fehlgeschlagen.</value>
  </data>
  <data name="ExceptionMsg" xml:space="preserve">
    <value>Fehler: {0}</value>
  </data>
  <data name="ExecutingBackupTal" xml:space="preserve">
    <value>Backup TAL wird ausgeführt ...</value>
  </data>
  <data name="ExecutingTal" xml:space="preserve">
    <value>TAL wird ausgeführt ...</value>
  </data>
  <data name="ExecutingVehicleFunc" xml:space="preserve">
    <value>Vorgang wird ausgeführt ...</value>
  </data>
  <data name="ExecutingVehicleFuncFinished" xml:space="preserve">
    <value>Vorgang abgeschlossen.</value>
  </data>
  <data name="FaBackupWriteFailed" xml:space="preserve">
    <value>Backup FA schreiben fehlgeschlagen.</value>
  </data>
  <data name="FaBackupWritten" xml:space="preserve">
    <value>Backup FA geschrieben.</value>
  </data>
  <data name="FaWriteFailed" xml:space="preserve">
    <value>FA schreiben fehlgeschlagen.</value>
  </data>
  <data name="FaWritten" xml:space="preserve">
    <value>FA geschrieben.</value>
  </data>
  <data name="HostStarted" xml:space="preserve">
    <value>Service Host gestartet.</value>
  </data>
  <data name="HostStartFailed" xml:space="preserve">
    <value>Host starten fehlgeschlagen.</value>
  </data>
  <data name="HostStarting" xml:space="preserve">
    <value>Service Host starten ...</value>
  </data>
  <data name="HostStopped" xml:space="preserve">
    <value>Service Host gestoppt.</value>
  </data>
  <data name="HostStopping" xml:space="preserve">
    <value>Service Host stoppen ...</value>
  </data>
  <data name="ILevelBackupFailed" xml:space="preserve">
    <value>IStufe Backup fehlgeschlagen.</value>
  </data>
  <data name="ILevelBackupUpdated" xml:space="preserve">
    <value>IStufe Backup aktualisiert.</value>
  </data>
  <data name="ILevelUpdated" xml:space="preserve">
    <value>IStufe aktualisiert.</value>
  </data>
  <data name="ILevelUpdateFailed" xml:space="preserve">
    <value>IStufen aktualisieren fehlgeschlagen.</value>
  </data>
  <data name="NcdFailures" xml:space="preserve">
    <value>NCD Fehler erkannt.</value>
  </data>
  <data name="NcdOnlineCalculation" xml:space="preserve">
    <value>NCD Online Berechnung notwendig.</value>
  </data>
  <data name="NoNcdRequestFile" xml:space="preserve">
    <value>NCD Anfrage-Datei fehlt.</value>
  </data>
  <data name="NoTargetILevel" xml:space="preserve">
    <value>Keine Ziel IStufe vorhanden.</value>
  </data>
  <data name="PiaMasterUpdated" xml:space="preserve">
    <value>PIA Master aktualisiert.</value>
  </data>
  <data name="PiaMasterUpdateFailed" xml:space="preserve">
    <value>PIA Master aktualisieren fehlgeschlagen.</value>
  </data>
  <data name="ReadILevelFailed" xml:space="preserve">
    <value>IStufe lesen fehlgeschlagen.</value>
  </data>
  <data name="ReadVinFailed" xml:space="preserve">
    <value>FG-NR lesen fehlgeschlagen.</value>
  </data>
  <data name="RequestEcuContextFailed" xml:space="preserve">
    <value>ECU Kontext anfragen fehlgeschlagen.</value>
  </data>
  <data name="SoftwareFailures" xml:space="preserve">
    <value>Softwarefehler erkannt..</value>
  </data>
  <data name="TalExecuteError" xml:space="preserve">
    <value>TAL Ausführung mit Fehlern beendet.</value>
  </data>
  <data name="TalExecuteOk" xml:space="preserve">
    <value>TAL Ausführung ohne Fehler beendet.</value>
  </data>
  <data name="TalMissing" xml:space="preserve">
    <value>TAL nicht vorhanden.</value>
  </data>
  <data name="TslUpdated" xml:space="preserve">
    <value>TSL aktualisiert.</value>
  </data>
  <data name="TslUpdateFailed" xml:space="preserve">
    <value>TSL aktualisieren fehlgeschlagen.</value>
  </data>
  <data name="UpdateVehicleDataFailed" xml:space="preserve">
    <value>Fahrzeugdaten aktualisieren fehlgeschlagen.</value>
  </data>
  <data name="VehicleConnected" xml:space="preserve">
    <value>Fahrzeug verbunden.</value>
  </data>
  <data name="VehicleConnecting" xml:space="preserve">
    <value>Fahrzeug verbinden ...</value>
  </data>
  <data name="VehicleDetecting" xml:space="preserve">
    <value>Fahrzeug erkennen ...</value>
  </data>
  <data name="VehicleDetectionFailed" xml:space="preserve">
    <value>Fahrzeug erkennen fehlgeschlagen.</value>
  </data>
  <data name="VehicleDisconnected" xml:space="preserve">
    <value>Fahrzeug getrennt.</value>
  </data>
  <data name="VehicleDisconnecting" xml:space="preserve">
    <value>Fahrzeug trennen ...</value>
  </data>
  <data name="VehicleInfo" xml:space="preserve">
    <value>FG-NR={0}, Serie={1}
IStufe produktion={2} aktuell={3}</value>
  </data>
  <data name="VehicleNoTargetSelector" xml:space="preserve">
    <value>Target Selector nicht erkannt.</value>
  </data>
  <data name="VehicleNotConnected" xml:space="preserve">
    <value>Fahrzeug nicht verbunden.</value>
  </data>
  <data name="VehicleSeriesNotDetected" xml:space="preserve">
    <value>Fahrzeugserie nicht erkannt.</value>
  </data>
</root>