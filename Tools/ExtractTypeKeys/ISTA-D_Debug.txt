Debugging of ISTA-D:
====================

Decompile ISTA-D:
=================
git clone --recursive https://github.com/0xd4d/de4dot.git
Build de4dot.netframework.sln as Release
The binary is in the subfolder: Release\net45\de4dot.exe
Copy files from "TesterGUI\bin\Release" to "TesterGUI\bin\ReleaseMod"
de4dot -r "TesterGUI\bin\Release" -ru -ro "TesterGUI\bin\ReleaseMod" --dont-rename
The files in "TesterGUI\bin\Release" are not modified, "TesterGUI\bin\ReleaseMod" now contains the deobfuscated files.

Disable ISTAGUI.exe hash check:
===============================
Modify RheingoldCoreFramework.dll (Edit -> Edit class, remove all references to other ISTA-D version first):
BMW.Rheingold.CoreFramework.InteropHelper:
public static bool VerifyStrongName(Type t, bool force)
At the end of the function add: flag = true;
-------------------------------------------------------------------------------------
			flag = true;
			if (!flag)
			{
				throw new Exception(string.Format("Assembly signature of {0} cannot be verified", ""));
			}
			return flag;
-------------------------------------------------------------------------------------
File -> Save module
If file is blocked, terminate IstaSericesHost.exe first!

Disable ISTAGUI.exe memory check:
===============================
Modify ISTAGUI.exe (Edit -> Edit class, remove all references to other ISTA-D version first):
BMW.Rheingold.ISTAGUI.Controller:
public Dictionary<InsufficientSystemRequirement, int[]> CheckSystemRequirements(bool isProgammingEnabled)
add: memoryCapacityInMBytes = num;
-------------------------------------------------------------------------------------
memoryCapacityInMBytes = num;
if (memoryCapacityInMBytes < num)
-------------------------------------------------------------------------------------
File -> Save module
If file is blocked, terminate IstaSericesHost.exe first!

Compile dnSpy-x86:
============================
git clone --recursive https://github.com/0xd4d/dnSpy.git
Install .NET Core 3.0 SDK and .NET Core 3.1 SDK
Install .NET Framework 4.8 SDK and Package for target version .NET Framework 4.8 in VS2019
Open dnSpy.sln in VS2019 and build solution as release
The binary is in the subfolder: dnSpy\dnSpy\bin\Release\net48\dnSpy-x86.exe

Debug ISTA-D with dnSpy-x86:
============================
Modify IstaOperationController.dll (Edit -> Edit class, remove all references to other ISTA-D version first):
in IstaOperationStarter.Start() add at the end of the function:
-------------------------------------------------------------------------------------
	if (Debugger.IsAttached)
	{
		MessageBox.Show(new Form { TopMost = true}, "IstaOperation started. Attach to IstaOperation.exe now.", "ISTAGUI", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
	}
	return istaOperation;
-------------------------------------------------------------------------------------
File -> Save module

Disable: ISTAGUI.App.CheckFreeDiskSpace()

Debugging:
Disable debugger detection in dnSpy (uncheck System.Diagnostics.Debugger option)!
After message box has been shown, attach to process IstaOperation.exe

Interesting breakpoints in RheingoldDiagnostics.dll:
BMW.Rheingold.RheingoldSessionController.Logic.StartVehicleTest() or
BMW.Rheingold.Diagnostics.VehicleIdent.DoVehicleIdentStep1() and BMW.Rheingold.Diagnostics.VehicleIdent.DoVehicleIdentStep2()
BMW.Rheingold.RheingoldSessionController.EcuFunctions.EcuTest.Perform()
BMW.Rheingold.Diagnostics.VehicleIdent.doECUReadFS()
BMW.Rheingold.Diagnostics.VehicleIdent.doECUReadFSDetails()
BMW.Rheingold.Diagnostics.VehicleIdent.SetDTCDetailValues()
BMW.Rheingold.RheingoldSessionController.EcuFunctions.EcuFunctionsReadStatus.DoReadStatus()
BMW.Rheingold.RheingoldSessionController.EcuFunctions.EcuFunctionsReadStatus.DoReadStatusSingleShot()

BMW.Rheingold.xVM:
VCIEnetHsfzService.ZGWBroadcastSendCyclic(), ReceiveCallback(),
VciDeviceService.CyclicBroadcastDeviceRequest(), VciDeviceService.ReceiveData(), VciDeviceService.CreateVciDevices()
SLP.ScanDeviceFromAttrList()
Match: "(DevId=),(Service=),(Serial=),(MacAddress=),(DevType=ENET),(ImageVersionBoot=),(ImageVersionApplication=),(ImageVersionPackage=),(Color=#ffffff),(Counter=),(State=4),(Owner=),(Kl15Voltage=),(Kl30Voltage=),(SignalStrength=),(VIN=),(Gateway=),(AccuCapacity=),(PowerSupply=0),(VciChannels=[0?;1?;2?;3+]),(Netmask=),(NetworkType=),(UUID=),(Port=6801),(ControlPort=),(PwfState=)"
"(DevId=WBA3X11010GV35856),(Service=),(Serial=DIAGADR10BMWMAC001A375355E5BMWVINWBA3X11010GV35856),(MacAddress=001A375355E5),(DevType=ENET),(ImageVersionBoot=),(ImageVersionApplication=),(ImageVersionPackage=),(Color=#ffffff),(Counter=),(State=4),(Owner=),(Kl15Voltage=),(Kl30Voltage=),(SignalStrength=),(VIN=WBA3X11010GV35856),(Gateway=),(AccuCapacity=),(PowerSupply=0),(VciChannels=[0?;1?;2?;3+]),(Netmask=),(NetworkType=),(UUID=),(Port=6801),(ControlPort=),(PwfState=)"
BMW.Rheingold.CoreFramework.DatabaseProvider
VCIDevice.GetClamp30(), VCIDevice.GetClamp15()

Checks for ISTA-D Update:
=========================
Export the source of the following modules:
- RheingoldCoreFramework.dll
- RheingoldPresentationFramework.dll
- RheingoldSessionController.dll
- RheingoldDiagnostics.dll

Update XML files in EdiabasLib\BmwDeepObd\VehicleInfo from: RheingoldDiagnostics\Diagnostics\EcuCharacteristics\Xml
Compare: RheingoldDiagnostics\Diagnostics\VehicleLogistics.cs: GetCharacteristics(), MRXEcuCharacteristics()

Read status processing:
=======================
EcuFunctionsReadStatus.DoReadStatus()
EcuFunctionsReadStatus.DoReadStatusSingleShot()
- ecuReadingTaskData.FixedFunctions: list of functions
- function.Jobs: list of jobs for function
- execute job: ECUKom.apiJob()
EcuFunctionsReadStatus.ProcessJobResults()
EcuFunctionsReadStatus.ConvertResultValue():
 value valid: value = value * (ecuResult.Multiplikator ?? 1m) + (ecuResult.Offset ?? 0m);
 value not valid: FindMatchingValue() or ConvertToString()

Get ECU function info (DiagDocDb.sqlite: Open with SQLiteStudio type=System.Data.SQLite)
EcuFunctionService.RetrieveFunctionDefinition()
 - GetEcuFunctionStructure()
 - SQL XEP_ECUGROUPS: GetEcuGroupByName(), match name (e.g. "d_ehc" id=1036022155)
 - SQL XEP_ECUGROUPFUNCTIONS: GetEcuGroupFunctionsByEcuGroupId(), match ecugroupid (e.g. ecugroupid=1036022155 -> id=2000000263355)
 - SQL XEP_ECUVARFUNCTIONS: GetEcuVariantFunctionByNameAndEcuGroupFunctionId(), match name and ecugroupfunctionid (e.g. name="ehc_e65" id=2000000263355 -> id=2000000264079)
 - SQL XEP_REFECUFUNCSTRUCTS: match all ids with ecuvariantfunctionid (e.g. id=2000000264079 -> ecufuncstructid=2000001159839, 2000001162603, 2000001179895, 2000001182931 ...)
 - SQL XEP_ECUFUNCSTRUCTURES: GetEcuFunctionStructureById(), match ecuFunctionstructureid
 - SQL XEP_ECUVARIANTS: GetEcuVariantByName(), match name (e.g. "ehc_e65" -> id=1036031243, ecugroupid=1036022155)
 - SQL XEP_REFECUVARIANTS: match id from XEP_ECUVARIANTS (e.g. 1036031243 -> id=2000000264079)
 - SQL XEP_ECUFIXEDFUNCTIONS: GetEcuFixedFunctionsByParentId(), match parentid from XEP_REFECUVARIANTS (e.g. 2000001182931 -> 2000001222439, 2000001222443)
 - SQL XEP_NODECLASSES: name="ECUFixedFunctionReadingIdentification" -> id=7164418
 - SQL GetFixedFunctionEcuJobsByNodeClass(), match nodeClass (e.g. nodeClass=7164418)
 - SQL XEP_ECUJOBS or XEP_REFECUJOBS: GetEcuJobsWithParameters(), match nodeClass and ecuFixedFunctionId (e.g. 2000001222439 -> id=2000001356499 name="LESEN_ANALOGWERTE")

Log files:
==========
ISTA creates a log file xxxIcomLogs*.tgz, this file is protected with the password: 3DkDxnKQZ1
obd.log contains the api and ifh log.
