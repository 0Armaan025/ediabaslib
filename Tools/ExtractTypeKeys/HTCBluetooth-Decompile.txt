Decompiling of HTC Bluetooth service
====================================

From the Android device get the subdirectories in: \system\app
HCTXXXBlueToothXXXX
HCTXXXFactorySettingsXXXX
If available also:
HCTXXXBlueToothManagerXXX

Decompiling:
============

Checkout https://github.com/anestisb/vdexExtractor
Convert CRLF to LF for make.sh
In Cygwin: ./make.sh
Binary is in bin/vdexExtractor.exe

Download the statically compiled linux x86-64 binary: 9.0_linux-x86_64_static.zip
(https://1drv.ms/u/s!ArDC4mvMyPrRhEq96XX-LsCACF2s)

In Cygwin extract the .vdex file with: vdexExtractor.exe -i xxx.vdex
If the output file is a .cdex file this has to be converted with compact_dex_converters on a linux system:
compact_dex_converters xxx.cdex
The output file extension has to be changed to .dex manually afterwards

From: https://github.com/pxb1988/dex2jar download the latest binary package.
Convert the .dex file to .jar:
d2j-dex2jar.bat xxx.dex

From: http://java-decompiler.github.io/ download the latest jd-gui
You could view or extract the source of the .jar file
In HCTBlueTooth the interesting part in the mapping from the the transaction ids to the commands in: BTServiceInf.java onTransact()

In HCTFactorySettings search for:
  public static final String[] tp = new String[] { 
      "NO", "MD725", "WQ_BC5", "WQ_BC6", "WQ_BC8", "Parrot_FC6000T", "SD-968", "SD-BC6", "SD-GT936", "IVT-i145", 
      "SD-8350", "WQ_RF210", "SD-816" };

For viewing the manifest and .xml files in the .apk file ClassyShark is a useful tool:
https://github.com/google/android-classyshark
