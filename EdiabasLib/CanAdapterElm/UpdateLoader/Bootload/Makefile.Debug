#############################################################################
# Makefile for building: libBootload
# Generated by qmake (2.01a) (Qt 4.6.1) on: So 25. Okt 20:27:32 2015
# Project:  Bootload.pro
# Template: lib
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -D_TTY_WIN_ -DQT_SQL_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT
CFLAGS        = -g -Wall $(DEFINES)
CXXFLAGS      = -g -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"c:\Programs\Qt\2010.01\qt\include\QtCore" -I"c:\Programs\Qt\2010.01\qt\include\QtSql" -I"c:\Programs\Qt\2010.01\qt\include" -I".." -I"c:\Programs\Qt\2010.01\qt\include\ActiveQt" -I"debug" -I"c:\Programs\Qt\2010.01\qt\mkspecs\win32-g++"
LIB        =        ar -ru
QMAKE         = c:\programs\qt\2010.01\qt\bin\qmake.exe
IDC           = c:\Programs\Qt\2010.01\qt\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = debug

####### Files

SOURCES       = ImportExportHex.cpp \
		DeviceWriter.cpp \
		DeviceWritePlanner.cpp \
		DeviceVerifyPlanner.cpp \
		DeviceVerifier.cpp \
		DeviceSqlLoader.cpp \
		DeviceReader.cpp \
		DeviceData.cpp \
		Device.cpp \
		Crc.cpp \
		Comm.cpp \
		BootPackets.cpp debug\moc_DeviceWriter.cpp \
		debug\moc_DeviceVerifier.cpp \
		debug\moc_DeviceReader.cpp
OBJECTS       = debug/ImportExportHex.o \
		debug/DeviceWriter.o \
		debug/DeviceWritePlanner.o \
		debug/DeviceVerifyPlanner.o \
		debug/DeviceVerifier.o \
		debug/DeviceSqlLoader.o \
		debug/DeviceReader.o \
		debug/DeviceData.o \
		debug/Device.o \
		debug/Crc.o \
		debug/Comm.o \
		debug/BootPackets.o \
		debug/moc_DeviceWriter.o \
		debug/moc_DeviceVerifier.o \
		debug/moc_DeviceReader.o
DIST          = 
QMAKE_TARGET  = Bootload
DESTDIR        = debug\ #avoid trailing-slash linebreak
TARGET         = libBootload.a
DESTDIR_TARGET = debug\libBootload.a

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Debug  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	ar -M < object_script.libBootload.Debug 


qmake:  FORCE
	@$(QMAKE) -spec c:\Programs\Qt\2010.01\qt\mkspecs\win32-g++ -win32 -o Makefile.Debug Bootload.pro

dist:
	$(ZIP) Bootload.zip $(SOURCES) $(DIST) Bootload.pro c:\Programs\Qt\2010.01\qt\mkspecs\qconfig.pri c:\Programs\Qt\2010.01\qt\mkspecs\features\qt_functions.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\qt_config.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\exclusive_builds.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\default_pre.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\win32\default_pre.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\debug.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\debug_and_release.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\default_post.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\win32\default_post.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\build_pass.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\staticlib.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\static.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\win32\rtti.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\win32\exceptions.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\win32\stl.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\warn_on.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\qt.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\win32\thread.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\moc.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\win32\windows.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\resources.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\uic.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\yacc.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\lex.prf c:\Programs\Qt\2010.01\qt\mkspecs\features\include_source_dir.prf  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) debug\ImportExportHex.o debug\DeviceWriter.o debug\DeviceWritePlanner.o debug\DeviceVerifyPlanner.o debug\DeviceVerifier.o debug\DeviceSqlLoader.o debug\DeviceReader.o debug\DeviceData.o debug\Device.o debug\Crc.o debug\Comm.o debug\BootPackets.o debug\moc_DeviceWriter.o debug\moc_DeviceVerifier.o debug\moc_DeviceReader.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Debug

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: debug/moc_DeviceWriter.cpp debug/moc_DeviceVerifier.cpp debug/moc_DeviceReader.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) debug\moc_DeviceWriter.cpp debug\moc_DeviceVerifier.cpp debug\moc_DeviceReader.cpp
debug/moc_DeviceWriter.cpp: Comm.h \
		Device.h \
		DeviceData.h \
		DeviceWritePlanner.h \
		DeviceWriter.h
	C:/Programs/Qt/2010.01/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 DeviceWriter.h -o debug\moc_DeviceWriter.cpp

debug/moc_DeviceVerifier.cpp: Comm.h \
		Device.h \
		DeviceVerifyPlanner.h \
		DeviceVerifier.h
	C:/Programs/Qt/2010.01/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 DeviceVerifier.h -o debug\moc_DeviceVerifier.cpp

debug/moc_DeviceReader.cpp: Device.h \
		Comm.h \
		DeviceReader.h
	C:/Programs/Qt/2010.01/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 DeviceReader.h -o debug\moc_DeviceReader.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 



####### Compile

debug/ImportExportHex.o: ImportExportHex.cpp ImportExportHex.h \
		DeviceData.h \
		Device.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\ImportExportHex.o ImportExportHex.cpp

debug/DeviceWriter.o: DeviceWriter.cpp DeviceWriter.h \
		Comm.h \
		Device.h \
		DeviceData.h \
		DeviceWritePlanner.h \
		DeviceReader.h \
		BootPackets.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\DeviceWriter.o DeviceWriter.cpp

debug/DeviceWritePlanner.o: DeviceWritePlanner.cpp DeviceWritePlanner.h \
		Device.h \
		BootPackets.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\DeviceWritePlanner.o DeviceWritePlanner.cpp

debug/DeviceVerifyPlanner.o: DeviceVerifyPlanner.cpp DeviceVerifyPlanner.h \
		Device.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\DeviceVerifyPlanner.o DeviceVerifyPlanner.cpp

debug/DeviceVerifier.o: DeviceVerifier.cpp DeviceVerifier.h \
		Comm.h \
		Device.h \
		DeviceVerifyPlanner.h \
		BootPackets.h \
		Crc.h \
		DeviceData.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\DeviceVerifier.o DeviceVerifier.cpp

debug/DeviceSqlLoader.o: DeviceSqlLoader.cpp DeviceSqlLoader.h \
		Device.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\DeviceSqlLoader.o DeviceSqlLoader.cpp

debug/DeviceReader.o: DeviceReader.cpp DeviceReader.h \
		Device.h \
		Comm.h \
		BootPackets.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\DeviceReader.o DeviceReader.cpp

debug/DeviceData.o: DeviceData.cpp DeviceData.h \
		Device.h \
		Crc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\DeviceData.o DeviceData.cpp

debug/Device.o: Device.cpp Device.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\Device.o Device.cpp

debug/Crc.o: Crc.cpp Crc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\Crc.o Crc.cpp

debug/Comm.o: Comm.cpp Comm.h \
		Device.h \
		BootPackets.h \
		Crc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\Comm.o Comm.cpp

debug/BootPackets.o: BootPackets.cpp Crc.h \
		BootPackets.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\BootPackets.o BootPackets.cpp

debug/moc_DeviceWriter.o: debug/moc_DeviceWriter.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\moc_DeviceWriter.o debug\moc_DeviceWriter.cpp

debug/moc_DeviceVerifier.o: debug/moc_DeviceVerifier.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\moc_DeviceVerifier.o debug\moc_DeviceVerifier.cpp

debug/moc_DeviceReader.o: debug/moc_DeviceReader.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\moc_DeviceReader.o debug\moc_DeviceReader.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

